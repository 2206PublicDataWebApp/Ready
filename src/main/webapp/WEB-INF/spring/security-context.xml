<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">


	<context:component-scan base-package="com.kh.ready" />
	<context:component-scan base-package="com.kh.ready.user" />
	<context:component-scan base-package="com.kh.ready.user.security" />
	
	<bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	<bean id="customUserService" class="com.kh.ready.user.security.CustomUserDetailService" />
	

	<security:http auto-config="true" use-expressions="true">
		<security:csrf disabled="true" />
		<security:intercept-url pattern="/" access="permitAll" />
		<security:intercept-url pattern="/resources/**" access="permitAll" />
		<security:intercept-url pattern="/common/**" access="permitAll" />
		<security:intercept-url pattern="/book/**" access="permitAll" />
		<security:intercept-url pattern="/cart/**" access="hasRole('ROLE_USER')" />
		<security:intercept-url pattern="/order/**" access="hasRole('ROLE_USER')" />
		<security:intercept-url pattern="/user/**" access="hasRole('ROLE_USER')" />
		<security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		
		<security:form-login login-page="/login"
								username-parameter="userId" 
								password-parameter="userPassword"
								login-processing-url="/login" 
								default-target-url="/"
								always-use-default-target="true"
								authentication-success-forward-url="/"
								 />
		
		<security:logout logout-success-url="/"
						invalidate-session="true" 
						delete-cookies="true" 
						logout-url="/logout" />
		
		<security:remember-me user-service-ref="customUserService" 
								token-validity-seconds="60000"
								key="cookie" />
		<security:oauth2-login login-page="/login"
								login-processing-url="/oauth/login"
								user-service-ref="principalOAuth2UserService"
								/>	

	</security:http>
		
		
		<security:client-registrations>		
			<security:client-registration registration-id="google" 
											provider-id="google" 
											client-id="381320302116-gcuhtonbu54p0njoajqg9hi0f1fk2fim.apps.googleusercontent.com"
											client-secret="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"
											authorization-grant-type="authorization_code"
											/>
			<security:client-registration registration-id="naver" 
											provider-id="naver" 
											client-name="naver"
											client-id="CaD7l1taovUW1xTscrik"
											client-secret="8Mrrqwy4jm"
											redirect-uri="http://127.0.0.1:8888/login/oauth2/code/naver"
											authorization-grant-type="authorization_code"/>
			<security:provider provider-id="google"/>
			
			<security:provider provider-id="naver" 
							authorization-uri="https://nid.naver.com/oauth2.0/authorize"
							token-uri="https://nid.naver.com/oauth2.0/token"
							user-info-uri="https://openapi.naver.com/v1/nid/me"
							user-info-user-name-attribute="response" />
		</security:client-registrations>


	
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="customUserService">
			<security:password-encoder ref="encoder" />
		</security:authentication-provider>
	</security:authentication-manager>
</beans>
